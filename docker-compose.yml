version: "3.9"
volumes:
  songs_data:  # Create a volume core_data that will contain the data for 'songs_persistence', such that when the container is stopped / crashes, the data remains.
  authentication_data:
  friend_data:
  playlist_data:
  activity_data:
  
services:
  songs_persistence:
    image: docker.io/postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres  # Can be any username & password combination, but we need to use the same combination in the code in 'songs'
      - POSTGRES_PASSWORD=postgres
    volumes:
      # Map the songs_persistence folder to the docker-entrypoint-initdb.d folder in the container.
      # This will ensure that the necessary files are present in the container for initializing the database(s)
      - ./songs_persistence/:/docker-entrypoint-initdb.d
      # Map the psql data from the container to a virtual volume, thus preserving the data after the container is stopped.
      - songs_data:/var/lib/postgresql/data

  songs:
    build: ./songs
    ports:
      - 5001:5000
    depends_on:
      - songs_persistence

  authentication_persistence:
    image: docker.io/postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./authentication_persistence/:/docker-entrypoint-initdb.d
      - authentication_data:/var/lib/postgresql/data

  authentication:
    build: ./authentication
    ports:
      - "5003:5000"
    depends_on:
      - authentication_persistence

  friend_persistence:
    image: docker.io/postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./friend_persistence/:/docker-entrypoint-initdb.d
      - friend_data:/var/lib/postgresql/data

  friend:
    build: ./friend
    ports:
      - "5004:5000"
    depends_on:
      - friend_persistence

  playlist_persistence:
    image: docker.io/postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./playlist_persistence/:/docker-entrypoint-initdb.d
      - playlist_data:/var/lib/postgresql/data

  playlist:
    build: ./playlist
    ports:
      - "5005:5000"
    depends_on:
      - playlist_persistence

  activity_persistence:
    image: docker.io/postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./activity_persistence/:/docker-entrypoint-initdb.d
      - activity_data:/var/lib/postgresql/data

  activity:
    build: ./activity
    ports:
      - "5002:5000"
    depends_on:
      - activity_persistence

  gui:
    build: ./gui
    ports:
      - 5000:5000